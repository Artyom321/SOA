// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Выполняет вход пользователя в систему",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "security": [
                    {
                        "sessionAuth": []
                    }
                ],
                "description": "Возвращает пагинированный список постов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Posts"
                ],
                "summary": "Получение списка постов",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Номер страницы (по умолчанию 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Размер страницы (по умолчанию 20)",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "sessionAuth": []
                    }
                ],
                "description": "Создает новый пост от имени текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Posts"
                ],
                "summary": "Создание нового поста",
                "parameters": [
                    {
                        "description": "Данные для создания поста",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.PostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "security": [
                    {
                        "sessionAuth": []
                    }
                ],
                "description": "Возвращает пост по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Posts"
                ],
                "summary": "Получение поста по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID поста",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "sessionAuth": []
                    }
                ],
                "description": "Обновляет данные поста",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Posts"
                ],
                "summary": "Обновление поста",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID поста",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные для поста",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "sessionAuth": []
                    }
                ],
                "description": "Удаляет пост по его ID",
                "tags": [
                    "Posts"
                ],
                "summary": "Удаление поста",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID поста",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeletePostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "sessionAuth": []
                    }
                ],
                "description": "Возвращает профиль текущего авторизованного пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Получение профиля пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "sessionAuth": []
                    }
                ],
                "description": "Обновляет данные профиля текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Обновление профиля пользователя",
                "parameters": [
                    {
                        "description": "Новые данные для профиля",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProfileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProfileUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Создает нового пользователя в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreatePostRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "description": {
                    "description": "Описание поста\nexample: Это описание моего первого поста",
                    "type": "string"
                },
                "is_private": {
                    "description": "Флаг приватности\nexample: false",
                    "type": "boolean"
                },
                "tags": {
                    "description": "Список тегов\nexample: [\"тег1\", \"тег2\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Название поста\nexample: Мой первый пост\nrequired: true",
                    "type": "string"
                }
            }
        },
        "models.DeletePostResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "description": "Результат удаления\nexample: true",
                    "type": "boolean"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Сообщение об ошибке\nexample: Invalid credentials",
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "description": "Логин пользователя\nrequired: true\nexample: johndoe",
                    "type": "string"
                },
                "password": {
                    "description": "Пароль пользователя\nrequired: true\nexample: securePassword123",
                    "type": "string"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Сообщение о результате\nexample: Logged in successfully",
                    "type": "string"
                }
            }
        },
        "models.PostListResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "description": "Список постов",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PostResponse"
                    }
                },
                "total_count": {
                    "description": "Общее количество постов\nexample: 42",
                    "type": "integer"
                }
            }
        },
        "models.PostResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Дата создания поста\nexample: 2023-01-01T12:00:00Z",
                    "type": "string"
                },
                "creator_id": {
                    "description": "ID создателя поста\nexample: 123e4567-e89b-12d3-a456-426614174000",
                    "type": "string"
                },
                "description": {
                    "description": "Описание поста\nexample: Это описание моего первого поста",
                    "type": "string"
                },
                "id": {
                    "description": "ID поста\nexample: 123e4567-e89b-12d3-a456-426614174000",
                    "type": "string"
                },
                "is_private": {
                    "description": "Флаг приватности\nexample: false",
                    "type": "boolean"
                },
                "tags": {
                    "description": "Список тегов\nexample: [\"тег1\", \"тег2\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Название поста\nexample: Мой первый пост",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Дата обновления поста\nexample: 2023-01-02T12:00:00Z",
                    "type": "string"
                }
            }
        },
        "models.ProfileResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "Данные пользователя",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                }
            }
        },
        "models.ProfileUpdateRequest": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "description": "Дата рождения пользователя\nexample: 1990-01-01T00:00:00Z",
                    "type": "string"
                },
                "email": {
                    "description": "Email пользователя\nexample: john.doe@example.com",
                    "type": "string"
                },
                "name": {
                    "description": "Имя пользователя\nexample: John",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "phoneNumber": {
                    "description": "Номер телефона пользователя\nexample: +12345678901",
                    "type": "string"
                },
                "surname": {
                    "description": "Фамилия пользователя\nexample: Doe",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                }
            }
        },
        "models.ProfileUpdateResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Статус операции\nexample: Profile updated successfully",
                    "type": "string"
                },
                "user": {
                    "description": "Обновленные данные пользователя",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "login",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "Email пользователя\nrequired: true\nexample: john.doe@example.com",
                    "type": "string"
                },
                "login": {
                    "description": "Логин пользователя (минимум 3 символа)\nrequired: true\nmin length: 3\nmax length: 50\nexample: johndoe",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "password": {
                    "description": "Пароль пользователя (минимум 6 символов)\nrequired: true\nmin length: 6\nexample: securePassword123",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6
                }
            }
        },
        "models.RegisterResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Статус операции\nexample: user created",
                    "type": "string"
                }
            }
        },
        "models.UpdatePostRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Описание поста\nexample: Обновленное описание поста",
                    "type": "string"
                },
                "is_private": {
                    "description": "Флаг приватности\nexample: true",
                    "type": "boolean"
                },
                "tags": {
                    "description": "Список тегов\nexample: [\"тег1\", \"тег2\", \"новыйТег\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Название поста\nexample: Обновленное название поста",
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "description": "Дата рождения пользователя\nexample: 1990-01-01T00:00:00Z",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Дата создания пользователя\nexample: 2023-01-01T12:00:00Z",
                    "type": "string"
                },
                "email": {
                    "description": "Email пользователя\nexample: john.doe@example.com",
                    "type": "string"
                },
                "login": {
                    "description": "Логин пользователя\nexample: johndoe",
                    "type": "string"
                },
                "name": {
                    "description": "Имя пользователя\nexample: John",
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "Номер телефона пользователя\nexample: +12345678901",
                    "type": "string"
                },
                "surname": {
                    "description": "Фамилия пользователя\nexample: Doe",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Дата последнего обновления пользователя\nexample: 2023-01-02T12:00:00Z",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "sessionAuth": {
            "type": "apiKey",
            "name": "user-session",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "API Gateway Service",
	Description:      "API шлюз для доступа к сервисам системы",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
